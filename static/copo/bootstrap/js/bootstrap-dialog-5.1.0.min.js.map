{
    "version": 3,
    "sources": [
        "bootstrap-dialog.js"
    ],
    "names": [
        "root",
        "factory",
        "module",
        "exports",
        "require",
        "define",
        "amd",
        "$",
        "BootstrapDialog",
        "jQuery",
        "this",
        "window",
        "BootstrapDialogModal",
        "element",
        "options",
        "Modal",
        "fn",
        "modal",
        "Constructor",
        "getModalVersion",
        "VERSION",
        "test",
        "ORIGINAL_BODY_PADDING",
        "parseInt",
        "css",
        "METHODS_TO_OVERRIDE",
        "hide",
        "e",
        "preventDefault",
        "Event",
        "$element",
        "trigger",
        "isShown",
        "isDefaultPrevented",
        "getGlobalOpenedDialogs",
        "length",
        "$body",
        "removeClass",
        "resetScrollbar",
        "escape",
        "document",
        "off",
        "attr",
        "support",
        "transition",
        "hasClass",
        "one",
        "proxy",
        "hideModal",
        "emulateTransitionEnd",
        "setScrollbar",
        "bodyPad",
        "bodyIsOverflowing",
        "scrollbarWidth",
        "backdrop",
        "resetAdjustments",
        "extend",
        "prototype",
        "constructor",
        "openedDialogs",
        "each",
        "dialogs",
        "id",
        "dialogInstance",
        "isRealized",
        "isOpened",
        "push",
        "defaultOptions",
        "newGuid",
        "buttons",
        "data",
        "onshow",
        "onshown",
        "onhide",
        "onhidden",
        "indexedButtons",
        "registeredButtonHotkeys",
        "draggableData",
        "isMouseDown",
        "mouseOffset",
        "realized",
        "opened",
        "initOptions",
        "holdThisInstance",
        "NAMESPACE",
        "TYPE_DEFAULT",
        "TYPE_INFO",
        "TYPE_PRIMARY",
        "TYPE_SECONDARY",
        "TYPE_SUCCESS",
        "TYPE_WARNING",
        "TYPE_DANGER",
        "TYPE_DARK",
        "TYPE_LIGHT",
        "DEFAULT_TEXTS",
        "SIZE_NORMAL",
        "SIZE_SMALL",
        "SIZE_WIDE",
        "SIZE_EXTRAWIDE",
        "SIZE_LARGE",
        "MODAL",
        "MODAL_SM",
        "MODAL_MD",
        "MODAL_LG",
        "MODAL_XL",
        "BUTTON_SIZES",
        "ICON_SPINNER",
        "BUTTONS_ORDER_CANCEL_OK",
        "BUTTONS_ORDER_OK_CANCEL",
        "Z_INDEX_BACKDROP",
        "Z_INDEX_MODAL",
        "type",
        "size",
        "cssClass",
        "title",
        "message",
        "nl2br",
        "closable",
        "closeByBackdrop",
        "closeByKeyboard",
        "closeIcon",
        "spinicon",
        "autodestroy",
        "draggable",
        "animate",
        "description",
        "tabindex",
        "btnsOrder",
        "scrollable",
        "configDefaultOptions",
        "openAll",
        "open",
        "closeAll",
        "close",
        "getDialog",
        "dialog",
        "setDialog",
        "getId",
        "addDialog",
        "moveFocus",
        "lastDialogInstance",
        "getModal",
        "focus",
        "updateZIndex",
        "zIndexBackdrop",
        "zIndexModal",
        "dialogCount",
        "dialogId",
        "$modal",
        "$backdrop",
        "getModalBackdrop",
        "realize",
        "_backdrop",
        "getModalForBootstrapDialogModal",
        "get",
        "initModalStuff",
        "setModal",
        "createModal",
        "setModalDialog",
        "createModalDialog",
        "setModalContent",
        "createModalContent",
        "setModalHeader",
        "createModalHeader",
        "setModalBody",
        "createModalBody",
        "setModalFooter",
        "createModalFooter",
        "append",
        "getModalDialog",
        "getModalContent",
        "getModalHeader",
        "getModalBody",
        "getModalFooter",
        "prop",
        "$modalDialog",
        "$modalContent",
        "$modalHeader",
        "$modalBody",
        "$modalFooter",
        "createDynamicContent",
        "rawContent",
        "content",
        "call",
        "formatStringContent",
        "replace",
        "setData",
        "key",
        "value",
        "getData",
        "setId",
        "getType",
        "setType",
        "updateType",
        "types",
        "join",
        "addClass",
        "getSize",
        "setSize",
        "updateSize",
        "getScrollable",
        "setScrollable",
        "updateScrollableContent",
        "getCssClass",
        "setCssClass",
        "getTitle",
        "setTitle",
        "updateTitle",
        "getDefaultText",
        "find",
        "getNamespace",
        "html",
        "getMessage",
        "setMessage",
        "updateMessage",
        "isClosable",
        "setClosable",
        "updateClosable",
        "setCloseByBackdrop",
        "canCloseByBackdrop",
        "setCloseByKeyboard",
        "canCloseByKeyboard",
        "isAnimate",
        "setAnimate",
        "updateAnimate",
        "toggleClass",
        "getSpinicon",
        "setSpinicon",
        "addButton",
        "button",
        "addButtons",
        "that",
        "index",
        "getButtons",
        "setButtons",
        "updateButtons",
        "getButton",
        "getButtonSize",
        "show",
        "closest",
        "createFooterButtons",
        "isAutodestroy",
        "setAutodestroy",
        "getDescription",
        "setDescription",
        "setTabindex",
        "getTabindex",
        "updateTabindex",
        "name",
        "createHeaderContent",
        "$container",
        "createTitleContent",
        "$title",
        "createCloseButton",
        "$button",
        "on",
        "event",
        "createBodyContent",
        "createMessageContent",
        "$message",
        "createFooterContent",
        "createButton",
        "icon",
        "trim",
        "createButtonIcon",
        "label",
        "hotkey",
        "autospin",
        "toggleSpin",
        "action",
        "enhanceButton",
        "enabled",
        "toggleEnable",
        "enable",
        "disable",
        "spin",
        "$icon",
        "prepend",
        "remove",
        "stopSpin",
        "enableButtons",
        "toggle",
        "onShow",
        "onShown",
        "onHide",
        "onHidden",
        "setRealized",
        "setOpened",
        "handleModalEvents",
        "isModalEvent",
        "openIt",
        "hideIt",
        "which",
        "is",
        "namespace",
        "makeModalDraggable",
        "dialogOffset",
        "offset",
        "top",
        "clientY",
        "left",
        "clientX",
        "keyboard",
        "c",
        "r",
        "Math",
        "random",
        "toString",
        "alert",
        "alertOptions",
        "defaultAlertOptions",
        "buttonLabel",
        "OK",
        "buttonHotkey",
        "callback",
        "arguments",
        "bind",
        "confirm",
        "confirmOptions",
        "defaultConfirmOptions",
        "btnCancelLabel",
        "CANCEL",
        "btnCancelClass",
        "btnCancelHotkey",
        "btnOKLabel",
        "btnOKClass",
        "btnOKHotkey",
        "split",
        "reverse",
        "warning",
        "danger",
        "success"
    ],
    "mappings": "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",
    "file": "bootstrap-dialog.js",
    "sourcesContent": [
        "/* global define */\n\n/* ================================================\n * Make use of Bootstrap's modal more monkey-friendly.\n *\n * For Bootstrap 3.\n *\n * javanoob@hotmail.com\n *\n * https://github.com/nakupanda/bootstrap3-dialog\n *\n * Licensed under The MIT License.\n * ================================================ */\n(function (root, factory) {\n\n    \"use strict\";\n\n    // CommonJS module is defined\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory(require('jquery'), require('bootstrap'));\n    }\n    // AMD module is defined\n    else if (typeof define === \"function\" && define.amd) {\n        define(\"bootstrap-dialog\", [\"jquery\", \"bootstrap\"], function ($) {\n            return factory($);\n        });\n    } else {\n        // planted over the root!\n        root.BootstrapDialog = factory(root.jQuery);\n    }\n\n}(this ? this : window, function ($) {\n\n    \"use strict\";\n\n    /* ================================================\n     * Definition of BootstrapDialogModal.\n     * Extend Bootstrap Modal and override some functions.\n     * BootstrapDialogModal === Modified Modal.\n     * ================================================ */\n    var Modal = $.fn.modal.Constructor;\n    var BootstrapDialogModal = function (element, options) {\n        return new Modal(element, options);\n    };\n\n    BootstrapDialogModal.getModalVersion = function () {\n        var version = null;\n        if (typeof $.fn.modal.Constructor.VERSION === 'undefined') {\n            version = 'v3.1';\n        } else if (/3\\.2\\.\\d+/.test($.fn.modal.Constructor.VERSION)) {\n            version = 'v3.2';\n        } else if (/3\\.3\\.[1,2]/.test($.fn.modal.Constructor.VERSION)) {\n            version = 'v3.3';  // v3.3.1, v3.3.2\n        } else if (/4\\.\\d\\.\\d+/.test($.fn.modal.Constructor.VERSION)) { //FIXME for BootstrapV4\n            version = 'v4.1';\n        } else if (/5\\.\\d\\.\\d+/.test($.fn.modal.Constructor.VERSION)) { //todo, OK for BootstrapV5 have to check to remove other versions tests\n            version = 'v4.1';\n        } else {\n            version = 'v3.3.4';\n        }\n\n        return version;\n    };\n    BootstrapDialogModal.ORIGINAL_BODY_PADDING = parseInt(($('body').css('padding-right') || 0), 10);\n    BootstrapDialogModal.METHODS_TO_OVERRIDE = {};\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.1'] = {};\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.2'] = {\n        hide: function (e) {\n            if (e) {\n                e.preventDefault();\n            }\n            e = $.Event('hide.bs.modal');\n\n            this.$element.trigger(e);\n\n            if (!this.isShown || e.isDefaultPrevented()) {\n                return;\n            }\n\n            this.isShown = false;\n\n            // Remove css class 'modal-open' when the last opened dialog is closing.\n            var openedDialogs = this.getGlobalOpenedDialogs();\n            if (openedDialogs.length === 0) {\n                this.$body.removeClass('modal-open');\n            }\n\n            this.resetScrollbar();\n            this.escape();\n\n            $(document).off('focusin.bs.modal');\n\n            this.$element\n                .removeClass('in')\n                .attr('aria-hidden', true)\n                .off('click.dismiss.bs.modal');\n\n            $.support.transition && this.$element.hasClass('fade') ?\n                this.$element\n                    .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n                    .emulateTransitionEnd(300) :\n                this.hideModal();\n        }\n    };\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3'] = {\n        /**\n         * Overrided.\n         *\n         * @returns {undefined}\n         */\n        setScrollbar: function () {\n            var bodyPad = BootstrapDialogModal.ORIGINAL_BODY_PADDING;\n            if (this.bodyIsOverflowing) {\n                this.$body.css('padding-right', bodyPad + this.scrollbarWidth);\n            }\n        },\n        /**\n         * Overrided.\n         *\n         * @returns {undefined}\n         */\n        resetScrollbar: function () {\n            var openedDialogs = this.getGlobalOpenedDialogs();\n            if (openedDialogs.length === 0) {\n                this.$body.css('padding-right', BootstrapDialogModal.ORIGINAL_BODY_PADDING);\n            }\n        },\n        /**\n         * Overrided.\n         *\n         * @returns {undefined}\n         */\n        hideModal: function () {\n            this.$element.hide();\n            this.backdrop($.proxy(function () {\n                var openedDialogs = this.getGlobalOpenedDialogs();\n                if (openedDialogs.length === 0) {\n                    this.$body.removeClass('modal-open');\n                }\n                this.resetAdjustments();\n                this.resetScrollbar();\n                this.$element.trigger('hidden.bs.modal');\n            }, this));\n        }\n    };\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3.4'] = $.extend({}, BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3']);\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v4.1'] = $.extend({}, BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3']); //FIXME for BootstrapV4\n    BootstrapDialogModal.prototype = {\n        constructor: BootstrapDialogModal,\n        /**\n         * New function, to get the dialogs that opened by BootstrapDialog.\n         *\n         * @returns {undefined}\n         */\n        getGlobalOpenedDialogs: function () {\n            var openedDialogs = [];\n            $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n                if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                    openedDialogs.push(dialogInstance);\n                }\n            });\n\n            return openedDialogs;\n        }\n    };\n\n    // Add compatible methods.\n    BootstrapDialogModal.prototype = $.extend(BootstrapDialogModal.prototype, Modal.prototype, BootstrapDialogModal.METHODS_TO_OVERRIDE[BootstrapDialogModal.getModalVersion()]);\n\n    /* ================================================\n     * Definition of BootstrapDialog.\n     * ================================================ */\n    var BootstrapDialog = function (options) {\n        this.defaultOptions = $.extend(true, {\n            id: BootstrapDialog.newGuid(),\n            buttons: [],\n            data: {},\n            onshow: null,\n            onshown: null,\n            onhide: null,\n            onhidden: null\n        }, BootstrapDialog.defaultOptions);\n        this.indexedButtons = {};\n        this.registeredButtonHotkeys = {};\n        this.draggableData = {\n            isMouseDown: false,\n            mouseOffset: {}\n        };\n        this.realized = false;\n        this.opened = false;\n        this.initOptions(options);\n        this.holdThisInstance();\n    };\n\n    BootstrapDialog.BootstrapDialogModal = BootstrapDialogModal;\n\n    /**\n     *  Some constants.\n     */\n    BootstrapDialog.NAMESPACE = 'bootstrap-dialog';\n    BootstrapDialog.TYPE_DEFAULT = 'bg-info';\n    BootstrapDialog.TYPE_INFO = 'bg-info';\n    BootstrapDialog.TYPE_PRIMARY = 'bg-primary';\n    BootstrapDialog.TYPE_SECONDARY = 'bg-secondary';\n    BootstrapDialog.TYPE_SUCCESS = 'bg-success';\n    BootstrapDialog.TYPE_WARNING = 'bg-warning';\n    BootstrapDialog.TYPE_DANGER = 'bg-danger';\n    BootstrapDialog.TYPE_DARK = 'bg-dark';\n    BootstrapDialog.TYPE_LIGHT = 'bg-light';\n    BootstrapDialog.DEFAULT_TEXTS = {};\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DEFAULT] = 'Default';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_INFO] = 'Information';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_PRIMARY] = 'Primary';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_SECONDARY] = 'Secondary';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_SUCCESS] = 'Success';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_WARNING] = 'Warning';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DANGER] = 'Danger';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DARK] = 'Dark';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_LIGHT] = 'Light';\n    BootstrapDialog.DEFAULT_TEXTS['OK'] = 'OK';\n    BootstrapDialog.DEFAULT_TEXTS['CANCEL'] = 'Cancel';\n    BootstrapDialog.DEFAULT_TEXTS['CONFIRM'] = 'Confirmation';\n\n    BootstrapDialog.SIZE_NORMAL = '';\n    BootstrapDialog.SIZE_SMALL = 'modal-sm';\n    BootstrapDialog.SIZE_WIDE = 'modal-lg';\n    BootstrapDialog.SIZE_EXTRAWIDE = 'modal-lg';\n    BootstrapDialog.SIZE_LARGE = 'modal-xl';\n    BootstrapDialog.MODAL = 'modal-fullscreen';\n    BootstrapDialog.MODAL_SM = 'modal-fullscreen-sm-down';\n    BootstrapDialog.MODAL_MD = 'modal-fullscreen-md-down';\n    BootstrapDialog.MODAL_LG = 'modal-fullscreen-lg-down';\n    BootstrapDialog.MODAL_XL = 'modal-fullscreen-xl-down';\n\n    BootstrapDialog.BUTTON_SIZES = {};\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_NORMAL] = '';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_SMALL] = 'btn-sm';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_WIDE] = 'btn-block';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_LARGE] = 'btn-lg';\n\n    BootstrapDialog.ICON_SPINNER = 'glyphicon glyphicon-asterisk';\n    BootstrapDialog.BUTTONS_ORDER_CANCEL_OK = 'btns-order-cancel-ok';\n    BootstrapDialog.BUTTONS_ORDER_OK_CANCEL = 'btns-order-ok-cancel';\n    BootstrapDialog.Z_INDEX_BACKDROP = 1040;\n    BootstrapDialog.Z_INDEX_MODAL = 1050;\n\n    /**\n     * Default options.\n     */\n    BootstrapDialog.defaultOptions = {\n        type: BootstrapDialog.TYPE_PRIMARY,\n        size: BootstrapDialog.SIZE_NORMAL,\n        cssClass: '',\n        title: null,\n        message: null,\n        nl2br: true,\n        closable: true,\n        closeByBackdrop: true,\n        closeByKeyboard: true,\n        closeIcon: '&#215;',\n        spinicon: BootstrapDialog.ICON_SPINNER,\n        autodestroy: true,\n        draggable: false,\n        animate: true,\n        description: '',\n        tabindex: -1,\n        btnsOrder: BootstrapDialog.BUTTONS_ORDER_CANCEL_OK,\n        scrollable: false,\n    };\n\n    /**\n     * Config default options.\n     */\n    BootstrapDialog.configDefaultOptions = function (options) {\n        BootstrapDialog.defaultOptions = $.extend(true, BootstrapDialog.defaultOptions, options);\n    };\n\n    /**\n     * Open / Close all created dialogs all at once.\n     */\n    BootstrapDialog.dialogs = {};\n    BootstrapDialog.openAll = function () {\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            dialogInstance.open();\n        });\n    };\n    BootstrapDialog.closeAll = function () {\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            dialogInstance.close();\n        });\n    };\n\n    /**\n     * Get dialog instance by given id.\n     *\n     * @returns dialog instance\n     */\n    BootstrapDialog.getDialog = function (id) {\n        var dialog = null;\n        if (typeof BootstrapDialog.dialogs[id] !== 'undefined') {\n            dialog = BootstrapDialog.dialogs[id];\n        }\n\n        return dialog;\n    };\n\n    /**\n     * Set a dialog.\n     *\n     * @returns the dialog that has just been set.\n     */\n    BootstrapDialog.setDialog = function (dialog) {\n        BootstrapDialog.dialogs[dialog.getId()] = dialog;\n\n        return dialog;\n    };\n\n    /**\n     * Alias of BootstrapDialog.setDialog(dialog)\n     *\n     * @param {type} dialog\n     * @returns {unresolved}\n     */\n    BootstrapDialog.addDialog = function (dialog) {\n        return BootstrapDialog.setDialog(dialog);\n    };\n\n    /**\n     * Move focus to next visible dialog.\n     */\n    BootstrapDialog.moveFocus = function () {\n        var lastDialogInstance = null;\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                lastDialogInstance = dialogInstance;\n            }\n        });\n        if (lastDialogInstance !== null) {\n            lastDialogInstance.getModal().focus();\n        }\n    };\n\n    BootstrapDialog.METHODS_TO_OVERRIDE = {};\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.1'] = {\n        /**\n         * To make multiple opened dialogs look better.\n         *\n         * Will be removed in later version, after Bootstrap Modal >= 3.3.0, updating z-index is unnecessary.\n         */\n        updateZIndex: function () {\n            if (this.isOpened()) {\n                var zIndexBackdrop = BootstrapDialog.Z_INDEX_BACKDROP;\n                var zIndexModal = BootstrapDialog.Z_INDEX_MODAL;\n                var dialogCount = 0;\n                $.each(BootstrapDialog.dialogs, function (dialogId, dialogInstance) {\n                    if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                        dialogCount++;\n                    }\n                });\n                var $modal = this.getModal();\n                var $backdrop = this.getModalBackdrop($modal); //FIXME for BootstrapV4\n                $modal.css('z-index', zIndexModal + (dialogCount - 1) * 20);\n                $backdrop.css('z-index', zIndexBackdrop + (dialogCount - 1) * 20);\n            }\n\n            return this;\n        },\n        open: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('show');\n            this.updateZIndex();\n\n            return this;\n        }\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.2'] = {\n        updateZIndex: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['updateZIndex'],\n        open: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['open']\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.3'] = {};\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.3.4'] = $.extend({}, BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']);\n    BootstrapDialog.METHODS_TO_OVERRIDE['v4.0'] = { //FIXME for BootstrapV4\n        getModalBackdrop: function ($modal) {\n            return $($modal.data('bs.modal')._backdrop);\n        },\n        updateZIndex: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['updateZIndex'],\n        open: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['open'],\n        getModalForBootstrapDialogModal: function () {\n            return this.getModal().get(0);\n        }\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v4.1'] = { //FIXME for BootstrapV4\n        getModalBackdrop: function ($modal) {\n            return $($modal.data('bs.modal')._backdrop);\n        },\n        updateZIndex: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['updateZIndex'],\n        open: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['open'],\n        getModalForBootstrapDialogModal: function () {\n            return this.getModal().get(0);\n        }\n    };\n    BootstrapDialog.prototype = {\n        constructor: BootstrapDialog,\n        initOptions: function (options) {\n            this.options = $.extend(true, this.defaultOptions, options);\n\n            return this;\n        },\n        holdThisInstance: function () {\n            BootstrapDialog.addDialog(this);\n\n            return this;\n        },\n        initModalStuff: function () {\n\n\n            this.setModal(this.createModal())\n                .setModalDialog(this.createModalDialog())\n                .setModalContent(this.createModalContent())\n                .setModalHeader(this.createModalHeader())\n                .setModalBody(this.createModalBody())\n                .setModalFooter(this.createModalFooter());\n\n            this.getModal().append(this.getModalDialog());\n            this.getModalDialog().append(this.getModalContent());\n            this.getModalContent()\n                .append(this.getModalHeader())\n                .append(this.getModalBody())\n                .append(this.getModalFooter());\n\n\n\n            return this;\n        },\n        createModal: function () {\n            var $modal = $('<div class=\"modal\" role=\"dialog\" aria-hidden=\"true\"></div>');\n            $modal.prop('id', this.getId());\n            $modal.attr('aria-labelledby', this.getId() + '_title');\n\n            return $modal;\n        },\n        getModal: function () {\n            return this.$modal;\n        },\n        setModal: function ($modal) {\n            this.$modal = $modal;\n\n            return this;\n        },\n        getModalBackdrop: function ($modal) { //FIXME for BootstrapV4\n            return $modal.data('bs.modal').$backdrop;\n        },\n        getModalForBootstrapDialogModal: function () { //FIXME for BootstrapV4\n            return this.getModal();\n        },\n        createModalDialog: function () {\n            return $('<div class=\"modal-dialog\"></div>');\n        },\n        getModalDialog: function () {\n            return this.$modalDialog;\n        },\n        setModalDialog: function ($modalDialog) {\n            this.$modalDialog = $modalDialog;\n\n            return this;\n        },\n        createModalContent: function () {\n            return $('<div class=\"modal-content\"></div>');\n        },\n        getModalContent: function () {\n            return this.$modalContent;\n        },\n        setModalContent: function ($modalContent) {\n            this.$modalContent = $modalContent;\n\n            return this;\n        },\n        createModalHeader: function () {\n            return $('<div class=\"modal-header\"></div>');\n        },\n        getModalHeader: function () {\n            return this.$modalHeader;\n        },\n        setModalHeader: function ($modalHeader) {\n            this.$modalHeader = $modalHeader;\n\n            return this;\n        },\n        createModalBody: function () {\n            return $('<div class=\"modal-body\"></div>');\n        },\n        getModalBody: function () {\n            return this.$modalBody;\n        },\n        setModalBody: function ($modalBody) {\n            this.$modalBody = $modalBody;\n\n            return this;\n        },\n        createModalFooter: function () {\n            return $('<div class=\"modal-footer\"></div>');\n        },\n        getModalFooter: function () {\n            return this.$modalFooter;\n        },\n        setModalFooter: function ($modalFooter) {\n            this.$modalFooter = $modalFooter;\n\n            return this;\n        },\n        createDynamicContent: function (rawContent) {\n            var content = null;\n            if (typeof rawContent === 'function') {\n                content = rawContent.call(rawContent, this);\n            } else {\n                content = rawContent;\n            }\n            if (typeof content === 'string') {\n                content = this.formatStringContent(content);\n            }\n\n            return content;\n        },\n        formatStringContent: function (content) {\n            if (this.options.nl2br) {\n                return content.replace(/\\r\\n/g, '<br />').replace(/[\\r\\n]/g, '<br />');\n            }\n\n            return content;\n        },\n        setData: function (key, value) {\n            this.options.data[key] = value;\n\n            return this;\n        },\n        getData: function (key) {\n            return this.options.data[key];\n        },\n        setId: function (id) {\n            this.options.id = id;\n\n            return this;\n        },\n        getId: function () {\n            return this.options.id;\n        },\n        getType: function () {\n            return this.options.type;\n        },\n        setType: function (type) {\n            this.options.type = type;\n            this.updateType();\n\n            return this;\n        },\n        updateType: function () {\n            if (this.isRealized()) {\n                var types = [BootstrapDialog.TYPE_DEFAULT,\n                BootstrapDialog.TYPE_INFO,\n                BootstrapDialog.TYPE_PRIMARY,\n                BootstrapDialog.TYPE_SECONDARY,\n                BootstrapDialog.TYPE_SUCCESS,\n                BootstrapDialog.TYPE_WARNING,\n                BootstrapDialog.TYPE_DARK,\n                BootstrapDialog.TYPE_LIGHT,\n                BootstrapDialog.TYPE_DANGER];\n\n                this.getModalHeader().removeClass(types.join(' ')).addClass(this.getType());\n            }\n\n            return this;\n        },\n        getSize: function () {\n            return this.options.size;\n        },\n        setSize: function (size) {\n            this.options.size = size;\n            this.updateSize();\n\n            return this;\n        },\n        getScrollable: function() {\n            return this.options.scrollable ;\n        },\n        setScrollable: function(value) {\n            this.options.scrollable = value ;\n            this.updateScrollableContent();\n        },\n        updateScrollableContent: function(){\n            if (this.options.scrollable) {\n                this.getModalDialog().addClass('modal-dialog-scrollable');\n            } else {\n                this.getModalDialog().removeClass('modal-dialog-scrollable');\n            }\n        },\n        updateSize: function () {\n            if (this.isRealized()) {\n                var dialog = this;\n\n                // Dialog size\n                this.getModalDialog().removeClass(BootstrapDialog.SIZE_NORMAL)\n                    .removeClass(BootstrapDialog.SIZE_SMALL)\n                    .removeClass(BootstrapDialog.SIZE_WIDE)\n                    .removeClass(BootstrapDialog.SIZE_EXTRAWIDE)\n                    .removeClass(BootstrapDialog.SIZE_LARGE);\n                this.getModalDialog().addClass(this.getSize());\n\n                /*\n                // Smaller dialog.\n                this.getModalDialog().removeClass('modal-sm');\n                if (this.getSize() === BootstrapDialog.SIZE_SMALL) {\n                    this.getModalDialog().addClass('modal-sm');\n                }\n\n                // Wider dialog.\n                this.getModalDialog().removeClass('modal-lg');\n                if (this.getSize() === BootstrapDialog.SIZE_WIDE) {\n                    this.getModalDialog().addClass('modal-lg');\n                }\n                // Extra Wide Dialog.\n                this.getModalDialog().removeClass('modal-xl');\n                if (this.getSize() === BootstrapDialog.SIZE_EXTRAWIDE) {\n                    this.getModalDialog().addClass('modal-xl');\n                }\n                */\n                // Button size\n                /*\n                $.each(this.options.buttons, function (index, button) {\n                    var $button = dialog.getButton(button.id);\n                    var buttonSizes = ['btn-lg', 'btn-sm', 'btn-xs'];\n                    var sizeClassSpecified = false;\n                    if (typeof button['cssClass'] === 'string') {\n                        var btnClasses = button['cssClass'].split(' ');\n                        $.each(btnClasses, function (index, btnClass) {\n                            if ($.inArray(btnClass, buttonSizes) !== -1) {\n                                sizeClassSpecified = true;\n                            }\n                        });\n                    }\n                    if (!sizeClassSpecified) {\n                        $button.removeClass(buttonSizes.join(' '));\n                        $button.addClass(dialog.getButtonSize());\n                    }\n                });\n                 */\n                //todo add button size option\n            }\n\n            return this;\n        },\n        getCssClass: function () {\n            return this.options.cssClass;\n        },\n        setCssClass: function (cssClass) {\n            this.options.cssClass = cssClass;\n\n            return this;\n        },\n        getTitle: function () {\n            return this.options.title;\n        },\n        setTitle: function (title) {\n            this.options.title = title;\n            this.updateTitle();\n\n            return this;\n        },\n        updateTitle: function () {\n            if (this.isRealized()) {\n                var title = this.getTitle() !== null ? this.createDynamicContent(this.getTitle()) : this.getDefaultText();\n                this.getModalHeader().find('.' + this.getNamespace('title')).html('').append(title).prop('id', this.getId() + '_title');\n            }\n\n            return this;\n        },\n        getMessage: function () {\n            return this.options.message;\n        },\n        setMessage: function (message) {\n            this.options.message = message;\n            this.updateMessage();\n\n            return this;\n        },\n        updateMessage: function () {\n            if (this.isRealized()) {\n                var message = this.createDynamicContent(this.getMessage());\n                this.getModalBody().find('.' + this.getNamespace('message')).html('').append(message);\n            }\n\n            return this;\n        },\n        isClosable: function () {\n            return this.options.closable;\n        },\n        setClosable: function (closable) {\n            this.options.closable = closable;\n            this.updateClosable();\n\n            return this;\n        },\n        setCloseByBackdrop: function (closeByBackdrop) {\n            this.options.closeByBackdrop = closeByBackdrop;\n\n            return this;\n        },\n        canCloseByBackdrop: function () {\n            return this.options.closeByBackdrop;\n        },\n        setCloseByKeyboard: function (closeByKeyboard) {\n            this.options.closeByKeyboard = closeByKeyboard;\n\n            return this;\n        },\n        canCloseByKeyboard: function () {\n            return this.options.closeByKeyboard;\n        },\n        isAnimate: function () {\n            return this.options.animate;\n        },\n        setAnimate: function (animate) {\n            this.options.animate = animate;\n\n            return this;\n        },\n        updateAnimate: function () {\n            if (this.isRealized()) {\n                this.getModal().toggleClass('fade', this.isAnimate());\n            }\n\n            return this;\n        },\n        getSpinicon: function () {\n            return this.options.spinicon;\n        },\n        setSpinicon: function (spinicon) {\n            this.options.spinicon = spinicon;\n\n            return this;\n        },\n        addButton: function (button) {\n            this.options.buttons.push(button);\n\n            return this;\n        },\n        addButtons: function (buttons) {\n            var that = this;\n            $.each(buttons, function (index, button) {\n                that.addButton(button);\n            });\n\n            return this;\n        },\n        getButtons: function () {\n            return this.options.buttons;\n        },\n        setButtons: function (buttons) {\n            this.options.buttons = buttons;\n            this.updateButtons();\n\n            return this;\n        },\n        /**\n         * If there is id provided for a button option, it will be in dialog.indexedButtons list.\n         *\n         * In that case you can use dialog.getButton(id) to find the button.\n         *\n         * @param {type} id\n         * @returns {undefined}\n         */\n        getButton: function (id) {\n            if (typeof this.indexedButtons[id] !== 'undefined') {\n                return this.indexedButtons[id];\n            }\n\n            return null;\n        },\n        getButtonSize: function () {\n            if (typeof BootstrapDialog.BUTTON_SIZES[this.getSize()] !== 'undefined') {\n                return BootstrapDialog.BUTTON_SIZES[this.getSize()];\n            }\n\n            return '';\n        },\n        updateButtons: function () {\n            if (this.isRealized()) {\n                if (this.getButtons().length === 0) {\n                    this.getModalFooter().hide();\n                } else {\n                    this.getModalFooter().show().closest('.modal-footer').append(this.createFooterButtons());\n                }\n            }\n\n            return this;\n        },\n        isAutodestroy: function () {\n            return this.options.autodestroy;\n        },\n        setAutodestroy: function (autodestroy) {\n            this.options.autodestroy = autodestroy;\n        },\n        getDescription: function () {\n            return this.options.description;\n        },\n        setDescription: function (description) {\n            this.options.description = description;\n\n            return this;\n        },\n        setTabindex: function (tabindex) {\n            this.options.tabindex = tabindex;\n\n            return this;\n        },\n        getTabindex: function () {\n            return this.options.tabindex;\n        },\n        updateTabindex: function () {\n            if (this.isRealized()) {\n                this.getModal().attr('tabindex', this.getTabindex());\n            }\n\n            return this;\n        },\n        getDefaultText: function () {\n            return BootstrapDialog.DEFAULT_TEXTS[this.getType()];\n        },\n        getNamespace: function (name) {\n            return BootstrapDialog.NAMESPACE + '-' + name;\n        },\n        createHeaderContent: function () {\n            //var $container = $('<div></div>');\n            //$container.addClass(this.getNamespace('header'));\n\n            // title\n            //$container.append(this.createTitleContent());\n\n            // Close button\n            //$container.append(this.createCloseButton());\n\n            return $container;\n        },\n        createTitleContent: function () {\n            var $title = $('<h5></h5>');\n            $title.addClass('modal-title');\n            $title.addClass(this.getNamespace('title'));\n\n            return $title;\n        },\n        createCloseButton: function () {\n            //var $container = $('<div></div>');\n            //$container.addClass(this.getNamespace('close-button'));\n            var $button = $('<button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"close\"></button>');\n            $button.addClass(this.getNamespace('close-button'));\n            /*\n            $icon.append(this.options.closeIcon);\n             */\n            //$icon.append($icon);\n            $button.on('click', { dialog: this }, function (event) {\n                event.data.dialog.close();\n            });\n\n            return $button;\n        },\n        createBodyContent: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('body'));\n\n            // Message\n            $container.append(this.createMessageContent());\n\n            return $container;\n        },\n        createMessageContent: function () {\n            var $message = $('<div></div>');\n            $message.addClass(this.getNamespace('message'));\n\n            return $message;\n        },\n        createFooterContent: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('footer'));\n\n            return $container;\n        },\n        createFooterButtons: function () {\n            var that = this;\n\n            var $container = that.$modalFooter;// $('<div></div>');\n            //$container.addClass(this.getNamespace('footer-buttons'));\n\n\n            this.indexedButtons = {};\n            $.each(this.options.buttons, function (index, button) {\n                if (!button.id) {\n                    button.id = BootstrapDialog.newGuid();\n                }\n                var $button = that.createButton(button);\n                that.indexedButtons[button.id] = $button;\n                $container.append($button);\n            });\n\n            return $container;\n        },\n        createButton: function (button) {\n            var $button = $('<button class=\"btn\"></button>');\n            $button.prop('id', button.id);\n            $button.data('button', button);\n\n            // Icon\n            if (typeof button.icon !== 'undefined' && $.trim(button.icon) !== '') {\n                $button.append(this.createButtonIcon(button.icon));\n            }\n\n            // Label\n            if (typeof button.label !== 'undefined') {\n                $button.append(button.label);\n            }\n\n            // title\n            if (typeof button.title !== 'undefined') {\n                $button.attr('title', button.title);\n            }\n\n            // Css class\n            if (typeof button.cssClass !== 'undefined' && $.trim(button.cssClass) !== '') {\n                $button.addClass(button.cssClass);\n            } else {\n                $button.addClass('btn-secondary');\n            }\n\n            // Data attributes\n            if (typeof button.data === 'object' && button.data.constructor === {}.constructor) {\n                $.each(button.data, function (key, value) {\n                    $button.attr('data-' + key, value);\n                });\n            }\n\n            // Hotkey\n            if (typeof button.hotkey !== 'undefined') {\n                this.registeredButtonHotkeys[button.hotkey] = $button;\n            }\n\n            // Button on click\n            $button.on('click', { dialog: this, $button: $button, button: button }, function (event) {\n                var dialog = event.data.dialog;\n                var $button = event.data.$button;\n                var button = $button.data('button');\n                if (button.autospin) {\n                    $button.toggleSpin(true);\n                }\n                if (typeof button.action === 'function') {\n                    return button.action.call($button, dialog, event);\n                }\n            });\n\n            // Dynamically add extra functions to $button\n            this.enhanceButton($button);\n\n            //Initialize enabled or not\n            if (typeof button.enabled !== 'undefined') {\n                $button.toggleEnable(button.enabled);\n            }\n\n            $button.addClass(\"bootstrap5-dialog-button\");\n\n            return $button;\n        },\n        /**\n         * Dynamically add extra functions to $button\n         *\n         * Using '$this' to reference 'this' is just for better readability.\n         *\n         * @param {type} $button\n         * @returns {_L13.BootstrapDialog.prototype}\n         */\n        enhanceButton: function ($button) {\n            $button.dialog = this;\n\n            // Enable / Disable\n            $button.toggleEnable = function (enable) {\n                var $this = this;\n                if (typeof enable !== 'undefined') {\n                    $this.prop(\"disabled\", !enable).toggleClass('disabled', !enable);\n                } else {\n                    $this.prop(\"disabled\", !$this.prop(\"disabled\"));\n                }\n\n                return $this;\n            };\n            $button.enable = function () {\n                var $this = this;\n                $this.toggleEnable(true);\n\n                return $this;\n            };\n            $button.disable = function () {\n                var $this = this;\n                $this.toggleEnable(false);\n\n                return $this;\n            };\n\n            // Icon spinning, helpful for indicating ajax loading status.\n            $button.toggleSpin = function (spin) {\n                var $this = this;\n                var dialog = $this.dialog;\n                var $icon = $this.find('.' + dialog.getNamespace('button-icon'));\n                if (typeof spin === 'undefined') {\n                    spin = !($button.find('.icon-spin').length > 0);\n                }\n                if (spin) {\n                    $icon.hide();\n                    $button.prepend(dialog.createButtonIcon(dialog.getSpinicon()).addClass('icon-spin'));\n                } else {\n                    $icon.show();\n                    $button.find('.icon-spin').remove();\n                }\n\n                return $this;\n            };\n            $button.spin = function () {\n                var $this = this;\n                $this.toggleSpin(true);\n\n                return $this;\n            };\n            $button.stopSpin = function () {\n                var $this = this;\n                $this.toggleSpin(false);\n\n                return $this;\n            };\n\n            return this;\n        },\n        createButtonIcon: function (icon) {\n            var $icon = $('<span></span>');\n            $icon.addClass(this.getNamespace('button-icon')).addClass(icon);\n\n            return $icon;\n        },\n        /**\n         * Invoke this only after the dialog is realized.\n         *\n         * @param {type} enable\n         * @returns {undefined}\n         */\n        enableButtons: function (enable) {\n            $.each(this.indexedButtons, function (id, $button) {\n                $button.toggleEnable(enable);\n            });\n\n            return this;\n        },\n        /**\n         * Invoke this only after the dialog is realized.\n         *\n         * @returns {undefined}\n         */\n        updateClosable: function () {\n            if (this.isRealized()) {\n                // Close button\n                this.getModalHeader().find('.' + this.getNamespace('close-button')).toggle(this.isClosable());\n            }\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'show.bs.modal'.\n         * This is a setter!\n         */\n        onShow: function (onshow) {\n            this.options.onshow = onshow;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'shown.bs.modal'.\n         * This is a setter!\n         */\n        onShown: function (onshown) {\n            this.options.onshown = onshown;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'hide.bs.modal'.\n         * This is a setter!\n         */\n        onHide: function (onhide) {\n            this.options.onhide = onhide;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'hidden.bs.modal'.\n         * This is a setter!\n         */\n        onHidden: function (onhidden) {\n            this.options.onhidden = onhidden;\n\n            return this;\n        },\n        isRealized: function () {\n            return this.realized;\n        },\n        setRealized: function (realized) {\n            this.realized = realized;\n\n            return this;\n        },\n        isOpened: function () {\n            return this.opened;\n        },\n        setOpened: function (opened) {\n            this.opened = opened;\n\n            return this;\n        },\n        handleModalEvents: function () {\n            this.getModal().on('show.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.setOpened(true);\n                if (dialog.isModalEvent(event) && typeof dialog.options.onshow === 'function') {\n                    var openIt = dialog.options.onshow(dialog);\n                    if (openIt === false) {\n                        dialog.setOpened(false);\n                    }\n\n                    return openIt;\n                }\n            });\n            this.getModal().on('shown.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.isModalEvent(event) && typeof dialog.options.onshown === 'function' && dialog.options.onshown(dialog);\n            });\n            this.getModal().on('hide.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.setOpened(false);\n                if (dialog.isModalEvent(event) && typeof dialog.options.onhide === 'function') {\n                    var hideIt = dialog.options.onhide(dialog);\n                    if (hideIt === false) {\n                        dialog.setOpened(true);\n                    }\n\n                    return hideIt;\n                }\n            });\n            this.getModal().on('hidden.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.isModalEvent(event) && typeof dialog.options.onhidden === 'function' && dialog.options.onhidden(dialog);\n                if (dialog.isAutodestroy()) {\n                    dialog.setRealized(false);\n                    delete BootstrapDialog.dialogs[dialog.getId()];\n                    $(this).remove();\n                }\n                BootstrapDialog.moveFocus();\n                if ($('.modal').hasClass('in')) {\n                    $('body').addClass('modal-open');\n                }\n            });\n\n            // ESC key support\n            this.getModal().on('keyup', { dialog: this }, function (event) {\n                event.which === 27 && event.data.dialog.isClosable() && event.data.dialog.canCloseByKeyboard() && event.data.dialog.close();\n            });\n\n            // Button hotkey\n            this.getModal().on('keyup', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                if (typeof dialog.registeredButtonHotkeys[event.which] !== 'undefined') {\n                    var $button = $(dialog.registeredButtonHotkeys[event.which]);\n                    !$button.prop('disabled') && !$button.is(':focus') && $button.focus().trigger('click');\n                }\n            });\n\n            return this;\n        },\n        isModalEvent: function (event) {\n            return typeof event.namespace !== 'undefined' && event.namespace === 'bs.modal';\n        },\n        makeModalDraggable: function () {\n            if (this.options.draggable) {\n                this.getModalHeader().addClass(this.getNamespace('draggable')).on('mousedown', { dialog: this }, function (event) {\n                    var dialog = event.data.dialog;\n                    dialog.draggableData.isMouseDown = true;\n                    var dialogOffset = dialog.getModalDialog().offset();\n                    dialog.draggableData.mouseOffset = {\n                        top: event.clientY - dialogOffset.top,\n                        left: event.clientX - dialogOffset.left\n                    };\n                });\n                this.getModal().on('mouseup mouseleave', { dialog: this }, function (event) {\n                    event.data.dialog.draggableData.isMouseDown = false;\n                });\n                $('body').on('mousemove', { dialog: this }, function (event) {\n                    var dialog = event.data.dialog;\n                    if (!dialog.draggableData.isMouseDown) {\n                        return;\n                    }\n                    dialog.getModalDialog().offset({\n                        top: event.clientY - dialog.draggableData.mouseOffset.top,\n                        left: event.clientX - dialog.draggableData.mouseOffset.left\n                    });\n                });\n            }\n\n            return this;\n        },\n        realize: function () {\n            this.initModalStuff();\n            this.getModal().addClass(BootstrapDialog.NAMESPACE)\n                .addClass(this.getCssClass());\n            this.updateSize();\n            if (this.getDescription()) {\n                this.getModal().attr('aria-describedby', this.getDescription());\n            }\n            //this.getModalFooter().append(this.createFooterContent());\n            this.getModalHeader().append(this.createTitleContent());\n            this.getModalHeader().append(this.createCloseButton());\n            //this.getModalHeader().append(this.createHeaderContent()); //V4 template\n            this.getModalBody().append(this.createBodyContent());\n            this.getModal().data('bs.modal', new BootstrapDialogModal(this.getModalForBootstrapDialogModal(), { //FIXME for BootstrapV4\n                backdrop: (this.isClosable() && this.canCloseByBackdrop()) ? true : 'static',\n                keyboard: this.options.closeByKeyboard,\n                show: false\n            }));\n            this.makeModalDraggable();\n            this.handleModalEvents();\n            this.setRealized(true);\n            this.updateButtons();\n            this.updateType();\n            this.updateTitle();\n            this.updateMessage();\n            this.updateClosable();\n            this.updateAnimate();\n            this.updateSize();\n            this.updateTabindex();\n            this.updateScrollableContent();\n\n            return this;\n        },\n        open: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('show');\n\n            return this;\n        },\n        close: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('hide');\n\n            return this;\n        }\n    };\n\n    // Add compatible methods.\n    BootstrapDialog.prototype = $.extend(BootstrapDialog.prototype, BootstrapDialog.METHODS_TO_OVERRIDE[BootstrapDialogModal.getModalVersion()]);\n\n    /**\n     * RFC4122 version 4 compliant unique id creator.\n     *\n     * Added by https://github.com/tufanbarisyildirim/\n     *\n     *  @returns {String}\n     */\n    BootstrapDialog.newGuid = function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    /* ================================================\n     * For lazy people\n     * ================================================ */\n\n    /**\n     * Shortcut function: show\n     *\n     * @param {type} options\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.show = function (options) {\n        return new BootstrapDialog(options).open();\n    };\n\n    /**\n     * Alert window\n     *\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.alert = function () {\n        var alertOptions = {};\n        var defaultAlertOptions = {\n            type: BootstrapDialog.TYPE_PRIMARY,\n            title: null,\n            message: null,\n            closable: false,\n            draggable: false,\n            buttonLabel: BootstrapDialog.DEFAULT_TEXTS.OK,\n            buttonHotkey: null,\n            callback: null\n        };\n\n        if (typeof arguments[0] === 'object' && arguments[0].constructor === {}.constructor) {\n            alertOptions = $.extend(true, defaultAlertOptions, arguments[0]);\n        } else {\n            alertOptions = $.extend(true, defaultAlertOptions, {\n                message: arguments[0],\n                callback: typeof arguments[1] !== 'undefined' ? arguments[1] : null\n            });\n        }\n\n        var dialog = new BootstrapDialog(alertOptions);\n        dialog.setData('callback', alertOptions.callback);\n        dialog.addButton({\n            label: alertOptions.buttonLabel,\n            hotkey: alertOptions.buttonHotkey,\n            action: function (dialog) {\n                if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, true) === false) {\n                    return false;\n                }\n                dialog.setData('btnClicked', true);\n\n                return dialog.close();\n            }\n        });\n        if (typeof dialog.options.onhide === 'function') {\n            dialog.onHide(function (dialog) {\n                var hideIt = true;\n                if (!dialog.getData('btnClicked') && dialog.isClosable() && typeof dialog.getData('callback') === 'function') {\n                    hideIt = dialog.getData('callback')(false);\n                }\n                if (hideIt === false) {\n                    return false;\n                }\n                hideIt = this.onhide(dialog);\n\n                return hideIt;\n            }.bind({\n                onhide: dialog.options.onhide\n            }));\n        } else {\n            dialog.onHide(function (dialog) {\n                var hideIt = true;\n                if (!dialog.getData('btnClicked') && dialog.isClosable() && typeof dialog.getData('callback') === 'function') {\n                    hideIt = dialog.getData('callback')(false);\n                }\n\n                return hideIt;\n            });\n        }\n\n        return dialog.open();\n    };\n\n    /**\n     * Confirm window\n     *\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.confirm = function () {\n        var confirmOptions = {};\n        var defaultConfirmOptions = {\n            type: BootstrapDialog.TYPE_PRIMARY,\n            title: null,\n            message: null,\n            closable: false,\n            draggable: false,\n            btnCancelLabel: BootstrapDialog.DEFAULT_TEXTS.CANCEL,\n            btnCancelClass: null,\n            btnCancelHotkey: null,\n            btnOKLabel: BootstrapDialog.DEFAULT_TEXTS.OK,\n            btnOKClass: null,\n            btnOKHotkey: null,\n            btnsOrder: BootstrapDialog.defaultOptions.btnsOrder,\n            callback: null\n        };\n        if (typeof arguments[0] === 'object' && arguments[0].constructor === {}.constructor) {\n            confirmOptions = $.extend(true, defaultConfirmOptions, arguments[0]);\n        } else {\n            confirmOptions = $.extend(true, defaultConfirmOptions, {\n                message: arguments[0],\n                callback: typeof arguments[1] !== 'undefined' ? arguments[1] : null\n            });\n        }\n        if (confirmOptions.btnOKClass === null) {\n            confirmOptions.btnOKClass = ['btn', confirmOptions.type.split('-')[1]].join('-');\n        }\n\n        var dialog = new BootstrapDialog(confirmOptions);\n        dialog.setData('callback', confirmOptions.callback);\n\n        var buttons = [{\n            label: confirmOptions.btnCancelLabel,\n            cssClass: confirmOptions.btnCancelClass,\n            hotkey: confirmOptions.btnCancelHotkey,\n            action: function (dialog) {\n                if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, false) === false) {\n                    return false;\n                }\n\n                return dialog.close();\n            }\n        }, {\n            label: confirmOptions.btnOKLabel,\n            cssClass: confirmOptions.btnOKClass,\n            hotkey: confirmOptions.btnOKHotkey,\n            action: function (dialog) {\n                if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, true) === false) {\n                    return false;\n                }\n\n                return dialog.close();\n            }\n        }];\n        if (confirmOptions.btnsOrder === BootstrapDialog.BUTTONS_ORDER_OK_CANCEL) {\n            buttons.reverse();\n        }\n        dialog.addButtons(buttons);\n\n        return dialog.open();\n\n    };\n\n    /**\n     * Warning window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.warning = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_WARNING,\n            message: message\n        }).open();\n    };\n\n    /**\n     * Danger window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.danger = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_DANGER,\n            message: message\n        }).open();\n    };\n\n    /**\n     * Success window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.success = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_SUCCESS,\n            message: message\n        }).open();\n    };\n\n    return BootstrapDialog;\n\n}));\n"
    ]
}