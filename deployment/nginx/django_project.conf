log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" '
                         'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

access_log /var/log/nginx/access.log upstream_time;

resolver 127.0.0.11 ipv6=off ipv4=on valid=30s;

server {
    listen *:80;
    listen 443 ssl;
    server_name "copo-project.org" "demo.copo-project.org" "copodev.cyverseuk.org";
    charset utf-8;
    ssl_certificate       /run/secrets/copo-project.crt;
    ssl_certificate_key   /run/secrets/copo-project.key;
    ssl_protocols         TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    client_max_body_size 2048M;
    #client_body_buffer_size 700M;
    #upload_max_filesize 0;
    client_body_timeout 300s;
    # N.B. these lines commented out during ddos testing.....could cause unforseen issues
    # keepalive_timeout 730;
    # proxy_connect_timeout 925s;
    # proxy_read_timeout 1500s;
    # N.B. Finish
    #client_body_timeout 300s;
    client_header_timeout 300s;
    # N.B. this block to protect against ddos and slowloris attacks
    #client_body_timeout 10s;
    #client_header_timeout 10s;
     proxy_read_timeout 600;
    #proxy_request_buffering off;
    # limit_req_zone $binary_remote_addr zone=one:10m rate=15r/s;
    # limit_conn_zone $binary_remote_addr zone=addr:10m;
    # N.B. Finish

    set $backend "copo_web:8000";


    location /static {
        autoindex off;
        alias /www/static/;
        # limit_req zone=one;
        # limit_conn addr 10;
    }

    location /media {
        autoindex off;
        alias /www/media/;
        # limit_req zone=one;
        # limit_conn addr 10;
    }
    location /copo {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # limit_req zone=one;
        # limit_conn addr 10;
    }
    location /docs {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # limit_req zone=one;
        # limit_conn addr 10;
    }
    location /accounts {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # limit_req zone=one;
        # limit_conn addr 10;
    }
    location /rest {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # limit_req zone=one;
        # limit_conn addr 10;
    }
    location /api {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # limit_req zone=one;
        # limit_conn addr 10;
    }
    location /admin {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # limit_req zone=one;
        # limit_conn addr 10;
    }
    location /ws/ {
        proxy_pass http://$backend;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";

		proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location / {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # limit_req zone=one;
        # limit_conn addr 10;
    }

}
server {
    listen *:80;
    server_name "*.singlecellschemas.org";
    root /www/singlecellschemas;
}

upstream minio {
    server  minio:9000;
}

upstream minio_console {
    ip_hash;
    server  minio:9001;
}

server {
    listen       80;
    listen 443 ssl;
    server_name  "minio.copo-project.org" "minio-demo.copo-project.org" "minio.copodev.cyverseuk.org";
    charset utf-8;
    ssl_certificate       /run/secrets/copo-project.crt;
    ssl_certificate_key   /run/secrets/copo-project.key;
    ssl_protocols         TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on; 

    # To allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 0;
    # To disable buffering
    proxy_buffering off;
    proxy_request_buffering off;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 300;
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        proxy_pass http://minio;
    }
}

server {
    listen   *:80;
    listen 443 ssl;
    server_name  "minio-console.copo-project.org" "minio-console-demo.copo-project.org" "minio-console.copodev.cyverseuk.org";
    charset utf-8;
    ssl_certificate       /run/secrets/copo-project.crt;
    ssl_certificate_key   /run/secrets/copo-project.key;
    ssl_protocols         TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on; 

    # To allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 0;
    # To disable buffering
    proxy_buffering off;
    proxy_request_buffering off;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;

        # This is necessary to pass the correct IP to be hashed
        real_ip_header X-Real-IP;

        proxy_connect_timeout 300;
        
        # To support websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        chunked_transfer_encoding off;

        proxy_pass http://minio_console;
    }
}